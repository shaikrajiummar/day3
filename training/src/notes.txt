ReactJS:-
********

- JavaScript is having libraries and frameworks.

libraries:- it is a collection of codes. 
	  - less set of rules
	  - reactjs  , jquery etcc..

frameworks :-it is a collection of libraries
	    - more set of rules.
	    - angular , vuejs etc...

important features of ReactJs:-
*******************************
1. ReactJs is JavaScript library to build rich reusable user interface.
2. ReactJS is faster because of "virtual DOM".
3. React follows component based architecture.
4. React follows unidirectional data flow.
5. React follows both client-side rendering and server-side rendering.

- React was introduced in 2011 by facebook.
- Jordan walke.
- 2013 react made  as a open-source.
- react is a free and platform-independent.

- to run react application use a command line "npm start".
- react run in the port number "3000".


folder structure of react:-
***************************
1.node moduels :- this folder stores all the third party libraries.
2.public :- public folder is a static folder which contains images , videos , html file.
3.src :- src is called as the main react folder.whatever we needs to modify or asdd we have to change with src folder only.
	-  this src folder mandatorily contains one file called as "index.js".
4.package.json:-  it is called as heart of any react application.
				- it will store all the information of application and its dependency.
5.pakage-lock.json:-this file used to lock the versions of all the third party libraries.


JSX:-
*****
- JSX stands for Javascript and XML.
- JSX is a javascript syntax extension to create html-like markup in the reactjs.
- JSX is not belongs to Reactjs but it is recomendded to use in react.
- JSX is a case-sensitive.

- actual way of creating the react elements is 
	-  React.createElement("tagname" , {property:value} , children/content);

- Rules of JSX
**************
1.Every element must be closed.
2.if more than one jsx element is used they must wrapped inside one parent element.


JSX expression:-
***************
-this is used to call the variables / expression.
- syntax :-  {}

components:-
************
- components is a files just containing javascript related codes.
- components are divided into 2 types.they are,
		1.class based component
		2.functional based component

1.class based component:-
*************************
- class component ism similar to javascript es6 class.
- class component is a "statefull" component by default because class component consist of "state object".

 syntax :-  class App extends React.Component{
				render()
				{
					return(
						//jsx
					)
				}
 				}


2.functional components:-
************************
- this is similar to javascript function.
- functional component is a "stateless component" until React v16.8, later FBC also becomes statefull because of "Hooks".

syntax :-  fucntion App(){
					return(
						//jsx
					)
				}

				or

			const App (){
				return(
					//jsx
				)
			}

component compoisition:-
************************
- component compoisition is a combination of multiple files/components to make single application.

Note :- any component created in react the component must be created by a name which is starting with capital letters.
		ex :- App.js / App.jsx

	- how to call a  child component inside a parent component.
			ex :-   <App></App> / <App/>


note :-  rcc - to create react class component
		rfce - to create react functional component
		rafce - to create react arrow function component

Props:-
*******
- Props is an object.
- props is nothing but properties.
- props is similar to html attributes.
- props is a immutable object.
- props is an object used to exchange the information / data from parent component to child component.
syntax :-  <Child username="Sam"/>
Note:- props cannot be passed from child component to parent component.
- Except string value all other remaining data types must be wrapped inside a jsx expression in props.

props.children:- it is special type of prop used to pass some information / component from parent to child component.


props drilling:-
****************
- props drilling is way to pass the data down to the child component.

State:-
********
- state is an object which is used to store / isolate the data inside the component.
- state object is a mutable object.

class based component:-
***********************
- in CBC , state is by default.

syntax :-   constructor(){
        super();
        // this.state=null;
        this.state={
            university:"MRU"
        };
    }
- to update the state of an object we have a predfined method "this.setState({})"



functional based component:-
- functional component is a stateless by default untill React v16.8.
- later functional components becomes statefull with the help of "Hooks" concept.
-syntax :-  const [state , setState] = useState(initialValue);
				state - it is used to store the initial value
				setState - it is sued to update the state.

Hooks:-
*******
- hooks are nothing but a functions which implemented all the features of class based component into fun ctional based component.

basic hooks are:-
1.useState()
2.useEffect()
3.useContext()






Note :- 
this keyword :- this keyword always target the current object.



